# 01_instalar_WSL2_y_Kali.ps1
# Ejecuta con bot√≥n derecho > Ejecutar con PowerShell como administrador

# Verificar si se est√° ejecutando como administrador
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ùå Este script debe ejecutarse como administrador." -ForegroundColor Red
    Write-Host "   Cierra esta ventana y ejecuta PowerShell como administrador." -ForegroundColor Yellow
    pause
    exit 1
}

Write-Host "=== Instalaci√≥n Simbi√≥tica: Paso 1 ===" -ForegroundColor Cyan
Write-Host "Verificando WSL2, Virtualizaci√≥n y entorno base..."

# Inicializar la variable $needRestart
$needRestart = $false

# 1. Verificar si la virtualizaci√≥n est√° activada
$cpuInfo = Get-CimInstance Win32_Processor
if (-not $cpuInfo.VirtualizationFirmwareEnabled) {
    Write-Host "‚ùå Virtualizaci√≥n NO est√° activada en BIOS. Act√≠vala y vuelve a intentar." -ForegroundColor Red
    Write-Host "   Generalmente se encuentra en la secci√≥n 'Advanced Features' o 'CPU Configuration' del BIOS/UEFI." -ForegroundColor Yellow
    pause
    exit 1
} else {
    Write-Host "‚úÖ Virtualizaci√≥n detectada." -ForegroundColor Green
}

# 2. Verificar si WSL ya est√° instalado
$wslFeature = Get-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
if ($wslFeature.State -ne "Enabled") {
    Write-Host "üîÑ Activando WSL..." -ForegroundColor Yellow
    dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
    $needRestart = $true
} else {
    Write-Host "‚úÖ WSL ya est√° activado." -ForegroundColor Green
}

# 3. Verificar Plataforma de M√°quina Virtual
$vmPlatform = Get-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform
if ($vmPlatform.State -ne "Enabled") {
    Write-Host "üîÑ Activando plataforma de virtualizaci√≥n..." -ForegroundColor Yellow
    dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
    $needRestart = $true
} else {
    Write-Host "‚úÖ Plataforma de virtualizaci√≥n ya est√° activada." -ForegroundColor Green
}

# 4. Descargar e instalar el paquete de actualizaci√≥n del kernel de Linux para WSL2
$kernelUpdateMsi = "$env:TEMP\wsl_update_x64.msi"
if (-not (Test-Path $kernelUpdateMsi)) {
    Write-Host "üîÑ Descargando la actualizaci√≥n del kernel de Linux para WSL2..." -ForegroundColor Yellow
    Invoke-WebRequest -Uri "https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" -OutFile $kernelUpdateMsi -UseBasicParsing
    Write-Host "üîÑ Instalando la actualizaci√≥n del kernel de Linux para WSL2..." -ForegroundColor Yellow
    Start-Process msiexec.exe -Wait -ArgumentList "/I $kernelUpdateMsi /quiet"
    Write-Host "‚úÖ Actualizaci√≥n del kernel de Linux para WSL2 instalada." -ForegroundColor Green
} else {
    Write-Host "‚úÖ La actualizaci√≥n del kernel de Linux para WSL2 ya est√° disponible localmente." -ForegroundColor Green
}

# 5. Establecer WSL2 como predeterminado
try {
    $wslVersion = (wsl --status | Select-String "Default Version").ToString().Split(":")[1].Trim()
    if ($wslVersion -ne "2") {
        Write-Host "üîÑ Estableciendo WSL2 como versi√≥n predeterminada..." -ForegroundColor Yellow
        wsl --set-default-version 2
        Write-Host "‚úÖ WSL2 establecido como predeterminado." -ForegroundColor Green
    } else {
        Write-Host "‚úÖ WSL2 ya est√° establecido como predeterminado." -ForegroundColor Green
    }
} catch {
    Write-Host "üîÑ Estableciendo WSL2 como versi√≥n predeterminada..." -ForegroundColor Yellow
    wsl --set-default-version 2
    Write-Host "‚úÖ WSL2 establecido como predeterminado." -ForegroundColor Green
}

# 6. Verificar si Kali ya est√° instalado
$kaliInstalled = wsl -l -v | Select-String "kali-linux"
if (-not $kaliInstalled) {
    Write-Host "üîÑ Instalando Kali Linux desde la Microsoft Store..." -ForegroundColor Yellow
    Start-Process "ms-windows-store://pdp/?productid=9PKR34TNCV07"
    Write-Host ""
    Write-Host "üïì Espera a que la instalaci√≥n termine en la Microsoft Store." -ForegroundColor Yellow
    Write-Host "   IMPORTANTE: Despu√©s de instalar desde la tienda, EJECUTA Kali Linux al menos una vez" -ForegroundColor Yellow
    Write-Host "   para completar la configuraci√≥n inicial." -ForegroundColor Yellow
    Write-Host "   Luego CIERRA ESA VENTANA y vuelve a ejecutar el Script 2." -ForegroundColor Yellow
    pause
    exit 0
} else {
    Write-Host "‚úÖ Kali ya est√° instalado. Puedes continuar con el Script 2." -ForegroundColor Green
}

# Verificar si se necesita reiniciar
if ($needRestart) {
    Write-Host "‚ö†Ô∏è Es necesario reiniciar el sistema para completar la instalaci√≥n." -ForegroundColor Yellow
    $restart = Read-Host "¬øDeseas reiniciar ahora? (S/N)"
    if ($restart -eq "S" -or $restart -eq "s") {
        Restart-Computer
    } else {
        Write-Host "‚ùó Recuerda reiniciar tu sistema antes de continuar con el Script 2." -ForegroundColor Red
    }
}