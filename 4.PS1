# 04_instalar_tinyllama.ps1
# Ejecutar con PowerShell como administrador

# Verificar si se est√° ejecutando como administrador
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ùå Este script debe ejecutarse como administrador." -ForegroundColor Red
    Write-Host "   Cierra esta ventana y ejecuta PowerShell como administrador." -ForegroundColor Yellow
    pause
    exit 1
}

Write-Host "=== Simbiosis: Paso 4 - TinyLLaMA ===" -ForegroundColor Cyan

# Verificar espacio disponible
$spaceCheck = wsl -d kali-linux -- bash -c "
    SPACE=\$(df -h /home | awk 'NR==2 {print \$4}' | tr -d 'G')
    if (( \$(echo \"\$SPACE < 2\" | bc -l) )); then
        echo 'ESPACIO_INSUFICIENTE'
    else
        echo 'ESPACIO_OK'
    fi
"

if ($spaceCheck -eq "ESPACIO_INSUFICIENTE") {
    Write-Host "‚ùå No hay suficiente espacio disponible. Se requieren al menos 2GB libres." -ForegroundColor Red
    pause
    exit 1
}

# Verificar si llama.cpp ya existe
$llamaInstalled = wsl -d kali-linux -- bash -c "
    if [ -d ~/obvlivorum_simbiosis/llama.cpp ]; then
        echo 'EXISTE'
    else
        echo 'NO_EXISTE'
    fi
"

if ($llamaInstalled -eq "EXISTE") {
    Write-Host "üîÑ llama.cpp ya est√° instalado. Verificando..." -ForegroundColor Yellow
    
    # Verificar si el ejecutable existe
    $execExists = wsl -d kali-linux -- bash -c "
        if [ -f ~/obvlivorum_simbiosis/llama.cpp/main ]; then
            echo 'EXISTE'
        else
            echo 'NO_EXISTE'
        fi
    "
    
    if ($execExists -eq "NO_EXISTE") {
        Write-Host "üîÑ El ejecutable no existe. Recompilando..." -ForegroundColor Yellow
        wsl -d kali-linux -- bash -c "
            cd ~/obvlivorum_simbiosis/llama.cpp &&
            make clean &&
            make -j\$(nproc)
        "
        
        if (-not $?) {
            Write-Host "‚ùå Error al compilar llama.cpp." -ForegroundColor Red
            pause
            exit 1
        }
    } else {
        Write-Host "‚úÖ llama.cpp ya est√° compilado." -ForegroundColor Green
    }
} else {
    # Instalar dependencias necesarias
    Write-Host "üîÑ Instalando dependencias para llama.cpp..." -ForegroundColor Yellow
    wsl -d kali-linux -- bash -c "
        sudo apt update &&
        sudo apt install -y build-essential cmake python3-dev libopenblas-dev
    "
    
    if (-not $?) {
        Write-Host "‚ùå Error al instalar dependencias." -ForegroundColor Red
        pause
        exit 1
    }
    
    # Clonar y compilar llama.cpp
    Write-Host "üîÑ Clonando repositorio llama.cpp..." -ForegroundColor Yellow
    wsl -d kali-linux -- bash -c "
        cd ~/obvlivorum_simbiosis &&
        git clone https://github.com/ggerganov/llama.cpp &&
        cd llama.cpp &&
        make -j\$(nproc)
    "
    
    if (-not $?) {
        Write-Host "‚ùå Error al clonar o compilar llama.cpp." -ForegroundColor Red
        pause
        exit 1
    }
    
    Write-Host "‚úÖ llama.cpp clonado y compilado correctamente." -ForegroundColor Green
}

# Verificar si el modelo ya est√° descargado
$modelExists = wsl -d kali-linux -- bash -c "
    if [ -f ~/obvlivorum_simbiosis/llama.cpp/models/tinyllama-1.1b-chat.Q4_K_M.gguf ]; then
        echo 'EXISTE'
    else
        echo 'NO_EXISTE'
    fi
"

if ($modelExists -eq "NO_EXISTE") {
    # Crear directorio de modelos si no existe
    Write-Host "üîÑ Descargando modelo TinyLLaMA (esto puede tomar varios minutos)..." -ForegroundColor Yellow
    wsl -d kali-linux -- bash -c "
        mkdir -p ~/obvlivorum_simbiosis/llama.cpp/models &&
        cd ~/obvlivorum_simbiosis/llama.cpp/models &&
        wget --progress=bar:force:noscroll https://huggingface.co/cafune/tinyllama-1.1B-gguf/resolve/main/tinyllama-1.1b-chat.Q4_K_M.gguf
    "
    
    if (-not $?) {
        Write-Host "‚ùå Error al descargar el modelo. Verifica tu conexi√≥n a Internet." -ForegroundColor Red
        pause
        exit 1
    }
    
    # Verificar que el modelo se descarg√≥ correctamente
    $modelSizeCheck = wsl -d kali-linux -- bash -c "
        SIZE=\$(du -m ~/obvlivorum_simbiosis/llama.cpp/models/tinyllama-1.1b-chat.Q4_K_M.gguf | cut -f1)
        if (( \$SIZE > 500 )); then
            echo 'TAMA√ëO_OK'
        else
            echo 'TAMA√ëO_INCORRECTO'
        fi
    "
    
    if ($modelSizeCheck -eq "TAMA√ëO_INCORRECTO") {
        Write-Host "‚ùå El modelo descargado parece incompleto o da√±ado." -ForegroundColor Red
        Write-Host "   Intenta ejecutar nuevamente este script." -ForegroundColor Yellow
        pause
        exit 1
    }
    
    Write-Host "‚úÖ Modelo TinyLLaMA descargado correctamente." -ForegroundColor Green
} else {
    Write-Host "‚úÖ El modelo TinyLLaMA ya est√° descargado." -ForegroundColor Green
}

# Probar el modelo
Write-Host "üîÑ Verificando funcionamiento del modelo con una prueba sencilla..." -ForegroundColor Yellow
$testResult = wsl -d kali-linux -- bash -c "
    cd ~/obvlivorum_simbiosis/llama.cpp &&
    echo 'Prueba exitosa' > /tmp/test_result.txt &&
    ./main -m models/tinyllama-1.1b-chat.Q4_K_M.gguf -p 'Hola, responde con 3 palabras:' -n 20 --no-display-prompt -r 'EOM' > /tmp/test_result.txt 2>/dev/null || echo 'ERROR_EJECUCI√ìN'
    cat /tmp/test_result.txt
"

if ($testResult -eq "ERROR_EJECUCI√ìN") {
    Write-Host "‚ö†Ô∏è No se pudo verificar el funcionamiento del modelo. Esto podr√≠a causar problemas m√°s adelante." -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Prueba del modelo completada." -ForegroundColor Green
}

Write-Host "‚úÖ TinyLLaMA instalado y listo en ~/obvlivorum_simbiosis/llama.cpp/models" -ForegroundColor Green
Write-Host "‚úÖ Paso 4 completado. Contin√∫a con el Script 5 para instalar el middleware e interfaz." -ForegroundColor Green