[tool:pytest]
# Pytest configuration for Obvivlorum AI Symbiote System

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests research_tests benchmarks

# Minimum version
minversion = 7.0

# Add options
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=70
    --durations=10

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    fast: marks tests as fast
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    benchmark: marks tests as benchmarks
    research: marks tests as research validation
    mathematical: marks tests as mathematical property validation
    theoretical: marks tests as theoretical correctness validation
    performance: marks tests as performance tests
    memory: marks tests as memory usage tests
    security: marks tests as security-related
    quantum: marks tests related to quantum processing
    consciousness: marks tests related to consciousness metrics
    neuroplasticity: marks tests related to neuroplasticity
    core: marks tests for core components
    scientific: marks tests for scientific components
    smoke: marks tests as smoke tests (quick validation)
    regression: marks tests as regression tests
    compatibility: marks tests for cross-platform compatibility

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:qiskit.*
    ignore::DeprecationWarning:pennylane.*
    ignore::RuntimeWarning:numba.*
    error::FutureWarning

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment to enable parallel test execution
# -n auto  # Auto-detect CPU count

# Coverage configuration
[coverage:run]
source = .
omit = 
    */venv/*
    */env/*
    */tests/*
    */research_tests/*
    */benchmarks/*
    setup.py
    */site-packages/*
    */__pycache__/*
    */migrations/*
    */node_modules/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod